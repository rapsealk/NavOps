// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameServerGrpcSdkService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tencentcloud.Gse.Grpcsdk {

  /// <summary>Holder for reflection information generated from GameServerGrpcSdkService.proto</summary>
  public static partial class GameServerGrpcSdkServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for GameServerGrpcSdkService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameServerGrpcSdkServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5HYW1lU2VydmVyR3JwY1Nka1NlcnZpY2UucHJvdG8SGHRlbmNlbnRjbG91",
            "ZC5nc2UuZ3JwY3NkaxoXR3NlR3JwY1Nka1NlcnZpY2UucHJvdG8iFAoSSGVh",
            "bHRoQ2hlY2tSZXF1ZXN0IisKE0hlYWx0aENoZWNrUmVzcG9uc2USFAoMaGVh",
            "bHRoU3RhdHVzGAEgASgIIioKDEdhbWVQcm9wZXJ0eRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAkingIKEUdhbWVTZXJ2ZXJTZXNzaW9uEhsKE2dhbWVT",
            "ZXJ2ZXJTZXNzaW9uSWQYASABKAkSDwoHZmxlZXRJZBgCIAEoCRIMCgRuYW1l",
            "GAMgASgJEhIKCm1heFBsYXllcnMYBCABKAUSEAoIam9pbmFibGUYBSABKAgS",
            "PgoOZ2FtZVByb3BlcnRpZXMYBiADKAsyJi50ZW5jZW50Y2xvdWQuZ3NlLmdy",
            "cGNzZGsuR2FtZVByb3BlcnR5EgwKBHBvcnQYByABKAUSEQoJaXBBZGRyZXNz",
            "GAggASgJEh0KFWdhbWVTZXJ2ZXJTZXNzaW9uRGF0YRgJIAEoCRIWCg5tYXRj",
            "aG1ha2VyRGF0YRgKIAEoCRIPCgdkbnNOYW1lGAsgASgJImcKHVN0YXJ0R2Ft",
            "ZVNlcnZlclNlc3Npb25SZXF1ZXN0EkYKEWdhbWVTZXJ2ZXJTZXNzaW9uGAEg",
            "ASgLMisudGVuY2VudGNsb3VkLmdzZS5ncnBjc2RrLkdhbWVTZXJ2ZXJTZXNz",
            "aW9uIjIKF1Byb2Nlc3NUZXJtaW5hdGVSZXF1ZXN0EhcKD3Rlcm1pbmF0aW9u",
            "VGltZRgBIAEoAzL6AgoYR2FtZVNlcnZlckdycGNTZGtTZXJ2aWNlEm4KDU9u",
            "SGVhbHRoQ2hlY2sSLC50ZW5jZW50Y2xvdWQuZ3NlLmdycGNzZGsuSGVhbHRo",
            "Q2hlY2tSZXF1ZXN0Gi0udGVuY2VudGNsb3VkLmdzZS5ncnBjc2RrLkhlYWx0",
            "aENoZWNrUmVzcG9uc2UiABJ8ChhPblN0YXJ0R2FtZVNlcnZlclNlc3Npb24S",
            "Ny50ZW5jZW50Y2xvdWQuZ3NlLmdycGNzZGsuU3RhcnRHYW1lU2VydmVyU2Vz",
            "c2lvblJlcXVlc3QaJS50ZW5jZW50Y2xvdWQuZ3NlLmdycGNzZGsuR3NlUmVz",
            "cG9uc2UiABJwChJPblByb2Nlc3NUZXJtaW5hdGUSMS50ZW5jZW50Y2xvdWQu",
            "Z3NlLmdycGNzZGsuUHJvY2Vzc1Rlcm1pbmF0ZVJlcXVlc3QaJS50ZW5jZW50",
            "Y2xvdWQuZ3NlLmdycGNzZGsuR3NlUmVzcG9uc2UiAEIrChNjc2hhcnAtZGVt",
            "by9ncnBjc2RrQgxHcnBjU2RrUHJvdG9QAaICA0dTRWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.HealthCheckRequest), global::Tencentcloud.Gse.Grpcsdk.HealthCheckRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.HealthCheckResponse), global::Tencentcloud.Gse.Grpcsdk.HealthCheckResponse.Parser, new[]{ "HealthStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.GameProperty), global::Tencentcloud.Gse.Grpcsdk.GameProperty.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.GameServerSession), global::Tencentcloud.Gse.Grpcsdk.GameServerSession.Parser, new[]{ "GameServerSessionId", "FleetId", "Name", "MaxPlayers", "Joinable", "GameProperties", "Port", "IpAddress", "GameServerSessionData", "MatchmakerData", "DnsName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.StartGameServerSessionRequest), global::Tencentcloud.Gse.Grpcsdk.StartGameServerSessionRequest.Parser, new[]{ "GameServerSession" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.ProcessTerminateRequest), global::Tencentcloud.Gse.Grpcsdk.ProcessTerminateRequest.Parser, new[]{ "TerminationTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 定时拉取游戏进程健康检查
  /// </summary>
  public sealed partial class HealthCheckRequest : pb::IMessage<HealthCheckRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HealthCheckRequest> _parser = new pb::MessageParser<HealthCheckRequest>(() => new HealthCheckRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HealthCheckRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GameServerGrpcSdkServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckRequest(HealthCheckRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckRequest Clone() {
      return new HealthCheckRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HealthCheckRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HealthCheckRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HealthCheckRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class HealthCheckResponse : pb::IMessage<HealthCheckResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HealthCheckResponse> _parser = new pb::MessageParser<HealthCheckResponse>(() => new HealthCheckResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HealthCheckResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GameServerGrpcSdkServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckResponse(HealthCheckResponse other) : this() {
      healthStatus_ = other.healthStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HealthCheckResponse Clone() {
      return new HealthCheckResponse(this);
    }

    /// <summary>Field number for the "healthStatus" field.</summary>
    public const int HealthStatusFieldNumber = 1;
    private bool healthStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HealthStatus {
      get { return healthStatus_; }
      set {
        healthStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HealthCheckResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HealthCheckResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HealthStatus != other.HealthStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HealthStatus != false) hash ^= HealthStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HealthStatus != false) {
        output.WriteRawTag(8);
        output.WriteBool(HealthStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HealthStatus != false) {
        output.WriteRawTag(8);
        output.WriteBool(HealthStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HealthStatus != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HealthCheckResponse other) {
      if (other == null) {
        return;
      }
      if (other.HealthStatus != false) {
        HealthStatus = other.HealthStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HealthStatus = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            HealthStatus = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 游戏属性详情
  /// </summary>
  public sealed partial class GameProperty : pb::IMessage<GameProperty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameProperty> _parser = new pb::MessageParser<GameProperty>(() => new GameProperty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameProperty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GameServerGrpcSdkServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameProperty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameProperty(GameProperty other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameProperty Clone() {
      return new GameProperty(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// 属性名称（键）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    /// <summary>
    /// 属性值（值）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameProperty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameProperty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameProperty other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// game server session
  /// </summary>
  public sealed partial class GameServerSession : pb::IMessage<GameServerSession>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameServerSession> _parser = new pb::MessageParser<GameServerSession>(() => new GameServerSession());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameServerSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GameServerGrpcSdkServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameServerSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameServerSession(GameServerSession other) : this() {
      gameServerSessionId_ = other.gameServerSessionId_;
      fleetId_ = other.fleetId_;
      name_ = other.name_;
      maxPlayers_ = other.maxPlayers_;
      joinable_ = other.joinable_;
      gameProperties_ = other.gameProperties_.Clone();
      port_ = other.port_;
      ipAddress_ = other.ipAddress_;
      gameServerSessionData_ = other.gameServerSessionData_;
      matchmakerData_ = other.matchmakerData_;
      dnsName_ = other.dnsName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameServerSession Clone() {
      return new GameServerSession(this);
    }

    /// <summary>Field number for the "gameServerSessionId" field.</summary>
    public const int GameServerSessionIdFieldNumber = 1;
    private string gameServerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameServerSessionId {
      get { return gameServerSessionId_; }
      set {
        gameServerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fleetId" field.</summary>
    public const int FleetIdFieldNumber = 2;
    private string fleetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FleetId {
      get { return fleetId_; }
      set {
        fleetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxPlayers" field.</summary>
    public const int MaxPlayersFieldNumber = 4;
    private int maxPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPlayers {
      get { return maxPlayers_; }
      set {
        maxPlayers_ = value;
      }
    }

    /// <summary>Field number for the "joinable" field.</summary>
    public const int JoinableFieldNumber = 5;
    private bool joinable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Joinable {
      get { return joinable_; }
      set {
        joinable_ = value;
      }
    }

    /// <summary>Field number for the "gameProperties" field.</summary>
    public const int GamePropertiesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Tencentcloud.Gse.Grpcsdk.GameProperty> _repeated_gameProperties_codec
        = pb::FieldCodec.ForMessage(50, global::Tencentcloud.Gse.Grpcsdk.GameProperty.Parser);
    private readonly pbc::RepeatedField<global::Tencentcloud.Gse.Grpcsdk.GameProperty> gameProperties_ = new pbc::RepeatedField<global::Tencentcloud.Gse.Grpcsdk.GameProperty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tencentcloud.Gse.Grpcsdk.GameProperty> GameProperties {
      get { return gameProperties_; }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 7;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "ipAddress" field.</summary>
    public const int IpAddressFieldNumber = 8;
    private string ipAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpAddress {
      get { return ipAddress_; }
      set {
        ipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameServerSessionData" field.</summary>
    public const int GameServerSessionDataFieldNumber = 9;
    private string gameServerSessionData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameServerSessionData {
      get { return gameServerSessionData_; }
      set {
        gameServerSessionData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "matchmakerData" field.</summary>
    public const int MatchmakerDataFieldNumber = 10;
    private string matchmakerData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatchmakerData {
      get { return matchmakerData_; }
      set {
        matchmakerData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dnsName" field.</summary>
    public const int DnsNameFieldNumber = 11;
    private string dnsName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DnsName {
      get { return dnsName_; }
      set {
        dnsName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameServerSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameServerSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameServerSessionId != other.GameServerSessionId) return false;
      if (FleetId != other.FleetId) return false;
      if (Name != other.Name) return false;
      if (MaxPlayers != other.MaxPlayers) return false;
      if (Joinable != other.Joinable) return false;
      if(!gameProperties_.Equals(other.gameProperties_)) return false;
      if (Port != other.Port) return false;
      if (IpAddress != other.IpAddress) return false;
      if (GameServerSessionData != other.GameServerSessionData) return false;
      if (MatchmakerData != other.MatchmakerData) return false;
      if (DnsName != other.DnsName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameServerSessionId.Length != 0) hash ^= GameServerSessionId.GetHashCode();
      if (FleetId.Length != 0) hash ^= FleetId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (MaxPlayers != 0) hash ^= MaxPlayers.GetHashCode();
      if (Joinable != false) hash ^= Joinable.GetHashCode();
      hash ^= gameProperties_.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (IpAddress.Length != 0) hash ^= IpAddress.GetHashCode();
      if (GameServerSessionData.Length != 0) hash ^= GameServerSessionData.GetHashCode();
      if (MatchmakerData.Length != 0) hash ^= MatchmakerData.GetHashCode();
      if (DnsName.Length != 0) hash ^= DnsName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (FleetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FleetId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (MaxPlayers != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxPlayers);
      }
      if (Joinable != false) {
        output.WriteRawTag(40);
        output.WriteBool(Joinable);
      }
      gameProperties_.WriteTo(output, _repeated_gameProperties_codec);
      if (Port != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Port);
      }
      if (IpAddress.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(IpAddress);
      }
      if (GameServerSessionData.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(GameServerSessionData);
      }
      if (MatchmakerData.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MatchmakerData);
      }
      if (DnsName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DnsName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (FleetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FleetId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (MaxPlayers != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxPlayers);
      }
      if (Joinable != false) {
        output.WriteRawTag(40);
        output.WriteBool(Joinable);
      }
      gameProperties_.WriteTo(ref output, _repeated_gameProperties_codec);
      if (Port != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Port);
      }
      if (IpAddress.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(IpAddress);
      }
      if (GameServerSessionData.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(GameServerSessionData);
      }
      if (MatchmakerData.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MatchmakerData);
      }
      if (DnsName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DnsName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameServerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerSessionId);
      }
      if (FleetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FleetId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (MaxPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayers);
      }
      if (Joinable != false) {
        size += 1 + 1;
      }
      size += gameProperties_.CalculateSize(_repeated_gameProperties_codec);
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (IpAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddress);
      }
      if (GameServerSessionData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerSessionData);
      }
      if (MatchmakerData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchmakerData);
      }
      if (DnsName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DnsName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameServerSession other) {
      if (other == null) {
        return;
      }
      if (other.GameServerSessionId.Length != 0) {
        GameServerSessionId = other.GameServerSessionId;
      }
      if (other.FleetId.Length != 0) {
        FleetId = other.FleetId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.MaxPlayers != 0) {
        MaxPlayers = other.MaxPlayers;
      }
      if (other.Joinable != false) {
        Joinable = other.Joinable;
      }
      gameProperties_.Add(other.gameProperties_);
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.IpAddress.Length != 0) {
        IpAddress = other.IpAddress;
      }
      if (other.GameServerSessionData.Length != 0) {
        GameServerSessionData = other.GameServerSessionData;
      }
      if (other.MatchmakerData.Length != 0) {
        MatchmakerData = other.MatchmakerData;
      }
      if (other.DnsName.Length != 0) {
        DnsName = other.DnsName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 18: {
            FleetId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            MaxPlayers = input.ReadInt32();
            break;
          }
          case 40: {
            Joinable = input.ReadBool();
            break;
          }
          case 50: {
            gameProperties_.AddEntriesFrom(input, _repeated_gameProperties_codec);
            break;
          }
          case 56: {
            Port = input.ReadInt32();
            break;
          }
          case 66: {
            IpAddress = input.ReadString();
            break;
          }
          case 74: {
            GameServerSessionData = input.ReadString();
            break;
          }
          case 82: {
            MatchmakerData = input.ReadString();
            break;
          }
          case 90: {
            DnsName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 18: {
            FleetId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            MaxPlayers = input.ReadInt32();
            break;
          }
          case 40: {
            Joinable = input.ReadBool();
            break;
          }
          case 50: {
            gameProperties_.AddEntriesFrom(ref input, _repeated_gameProperties_codec);
            break;
          }
          case 56: {
            Port = input.ReadInt32();
            break;
          }
          case 66: {
            IpAddress = input.ReadString();
            break;
          }
          case 74: {
            GameServerSessionData = input.ReadString();
            break;
          }
          case 82: {
            MatchmakerData = input.ReadString();
            break;
          }
          case 90: {
            DnsName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 分配gameserversession到游戏进程
  /// </summary>
  public sealed partial class StartGameServerSessionRequest : pb::IMessage<StartGameServerSessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartGameServerSessionRequest> _parser = new pb::MessageParser<StartGameServerSessionRequest>(() => new StartGameServerSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartGameServerSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GameServerGrpcSdkServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameServerSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameServerSessionRequest(StartGameServerSessionRequest other) : this() {
      gameServerSession_ = other.gameServerSession_ != null ? other.gameServerSession_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameServerSessionRequest Clone() {
      return new StartGameServerSessionRequest(this);
    }

    /// <summary>Field number for the "gameServerSession" field.</summary>
    public const int GameServerSessionFieldNumber = 1;
    private global::Tencentcloud.Gse.Grpcsdk.GameServerSession gameServerSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tencentcloud.Gse.Grpcsdk.GameServerSession GameServerSession {
      get { return gameServerSession_; }
      set {
        gameServerSession_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartGameServerSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartGameServerSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameServerSession, other.GameServerSession)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (gameServerSession_ != null) hash ^= GameServerSession.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gameServerSession_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameServerSession);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gameServerSession_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameServerSession);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (gameServerSession_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameServerSession);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartGameServerSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.gameServerSession_ != null) {
        if (gameServerSession_ == null) {
          GameServerSession = new global::Tencentcloud.Gse.Grpcsdk.GameServerSession();
        }
        GameServerSession.MergeFrom(other.GameServerSession);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gameServerSession_ == null) {
              GameServerSession = new global::Tencentcloud.Gse.Grpcsdk.GameServerSession();
            }
            input.ReadMessage(GameServerSession);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gameServerSession_ == null) {
              GameServerSession = new global::Tencentcloud.Gse.Grpcsdk.GameServerSession();
            }
            input.ReadMessage(GameServerSession);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 结束游戏进程
  /// </summary>
  public sealed partial class ProcessTerminateRequest : pb::IMessage<ProcessTerminateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProcessTerminateRequest> _parser = new pb::MessageParser<ProcessTerminateRequest>(() => new ProcessTerminateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessTerminateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GameServerGrpcSdkServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessTerminateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessTerminateRequest(ProcessTerminateRequest other) : this() {
      terminationTime_ = other.terminationTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessTerminateRequest Clone() {
      return new ProcessTerminateRequest(this);
    }

    /// <summary>Field number for the "terminationTime" field.</summary>
    public const int TerminationTimeFieldNumber = 1;
    private long terminationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TerminationTime {
      get { return terminationTime_; }
      set {
        terminationTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessTerminateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessTerminateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TerminationTime != other.TerminationTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TerminationTime != 0L) hash ^= TerminationTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TerminationTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TerminationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TerminationTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TerminationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TerminationTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TerminationTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessTerminateRequest other) {
      if (other == null) {
        return;
      }
      if (other.TerminationTime != 0L) {
        TerminationTime = other.TerminationTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TerminationTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TerminationTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
