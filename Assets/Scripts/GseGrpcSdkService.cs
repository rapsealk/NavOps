// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GseGrpcSdkService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tencentcloud.Gse.Grpcsdk {

  /// <summary>Holder for reflection information generated from GseGrpcSdkService.proto</summary>
  public static partial class GseGrpcSdkServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for GseGrpcSdkService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GseGrpcSdkServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdHc2VHcnBjU2RrU2VydmljZS5wcm90bxIYdGVuY2VudGNsb3VkLmdzZS5n",
            "cnBjc2RrIlUKE1Byb2Nlc3NSZWFkeVJlcXVlc3QSGAoQbG9nUGF0aHNUb1Vw",
            "bG9hZBgBIAMoCRISCgpjbGllbnRQb3J0GAIgASgFEhAKCGdycGNQb3J0GAMg",
            "ASgFIlMKIEFjdGl2YXRlR2FtZVNlcnZlclNlc3Npb25SZXF1ZXN0EhsKE2dh",
            "bWVTZXJ2ZXJTZXNzaW9uSWQYASABKAkSEgoKbWF4UGxheWVycxgCIAEoBSJS",
            "ChpBY2NlcHRQbGF5ZXJTZXNzaW9uUmVxdWVzdBIbChNnYW1lU2VydmVyU2Vz",
            "c2lvbklkGAEgASgJEhcKD3BsYXllclNlc3Npb25JZBgCIAEoCSJSChpSZW1v",
            "dmVQbGF5ZXJTZXNzaW9uUmVxdWVzdBIbChNnYW1lU2VydmVyU2Vzc2lvbklk",
            "GAEgASgJEhcKD3BsYXllclNlc3Npb25JZBgCIAEoCSLtAQoNUGxheWVyU2Vz",
            "c2lvbhIXCg9wbGF5ZXJTZXNzaW9uSWQYASABKAkSEAoIcGxheWVySWQYAiAB",
            "KAkSGwoTZ2FtZVNlcnZlclNlc3Npb25JZBgDIAEoCRIPCgdmbGVldElkGAQg",
            "ASgJEhEKCWlwQWRkcmVzcxgFIAEoCRIOCgZzdGF0dXMYBiABKAkSFAoMY3Jl",
            "YXRpb25UaW1lGAcgASgDEhcKD3Rlcm1pbmF0aW9uVGltZRgIIAEoAxIMCgRw",
            "b3J0GAkgASgFEhIKCnBsYXllckRhdGEYCiABKAkSDwoHZG5zTmFtZRgLIAEo",
            "CSKsAQodRGVzY3JpYmVQbGF5ZXJTZXNzaW9uc1JlcXVlc3QSGwoTZ2FtZVNl",
            "cnZlclNlc3Npb25JZBgBIAEoCRIQCghwbGF5ZXJJZBgCIAEoCRIXCg9wbGF5",
            "ZXJTZXNzaW9uSWQYAyABKAkSIQoZcGxheWVyU2Vzc2lvblN0YXR1c0ZpbHRl",
            "chgEIAEoCRIRCgluZXh0VG9rZW4YBSABKAkSDQoFbGltaXQYBiABKAUidAoe",
            "RGVzY3JpYmVQbGF5ZXJTZXNzaW9uc1Jlc3BvbnNlEhEKCW5leHRUb2tlbhgB",
            "IAEoCRI/Cg5wbGF5ZXJTZXNzaW9ucxgCIAMoCzInLnRlbmNlbnRjbG91ZC5n",
            "c2UuZ3JwY3Nkay5QbGF5ZXJTZXNzaW9uIm8KKFVwZGF0ZVBsYXllclNlc3Np",
            "b25DcmVhdGlvblBvbGljeVJlcXVlc3QSGwoTZ2FtZVNlcnZlclNlc3Npb25J",
            "ZBgBIAEoCRImCh5uZXdQbGF5ZXJTZXNzaW9uQ3JlYXRpb25Qb2xpY3kYAiAB",
            "KAkiQAohVGVybWluYXRlR2FtZVNlcnZlclNlc3Npb25SZXF1ZXN0EhsKE2dh",
            "bWVTZXJ2ZXJTZXNzaW9uSWQYASABKAkiFgoUUHJvY2Vzc0VuZGluZ1JlcXVl",
            "c3QiTQoXUmVwb3J0Q3VzdG9tRGF0YVJlcXVlc3QSGgoSY3VycmVudEN1c3Rv",
            "bUNvdW50GAEgASgFEhYKDm1heEN1c3RvbUNvdW50GAIgASgFIg0KC0dzZVJl",
            "c3BvbnNlMuwIChFHc2VHcnBjU2RrU2VydmljZRJmCgxQcm9jZXNzUmVhZHkS",
            "LS50ZW5jZW50Y2xvdWQuZ3NlLmdycGNzZGsuUHJvY2Vzc1JlYWR5UmVxdWVz",
            "dBolLnRlbmNlbnRjbG91ZC5nc2UuZ3JwY3Nkay5Hc2VSZXNwb25zZSIAEoAB",
            "ChlBY3RpdmF0ZUdhbWVTZXJ2ZXJTZXNzaW9uEjoudGVuY2VudGNsb3VkLmdz",
            "ZS5ncnBjc2RrLkFjdGl2YXRlR2FtZVNlcnZlclNlc3Npb25SZXF1ZXN0GiUu",
            "dGVuY2VudGNsb3VkLmdzZS5ncnBjc2RrLkdzZVJlc3BvbnNlIgASdAoTQWNj",
            "ZXB0UGxheWVyU2Vzc2lvbhI0LnRlbmNlbnRjbG91ZC5nc2UuZ3JwY3Nkay5B",
            "Y2NlcHRQbGF5ZXJTZXNzaW9uUmVxdWVzdBolLnRlbmNlbnRjbG91ZC5nc2Uu",
            "Z3JwY3Nkay5Hc2VSZXNwb25zZSIAEnQKE1JlbW92ZVBsYXllclNlc3Npb24S",
            "NC50ZW5jZW50Y2xvdWQuZ3NlLmdycGNzZGsuUmVtb3ZlUGxheWVyU2Vzc2lv",
            "blJlcXVlc3QaJS50ZW5jZW50Y2xvdWQuZ3NlLmdycGNzZGsuR3NlUmVzcG9u",
            "c2UiABKNAQoWRGVzY3JpYmVQbGF5ZXJTZXNzaW9ucxI3LnRlbmNlbnRjbG91",
            "ZC5nc2UuZ3JwY3Nkay5EZXNjcmliZVBsYXllclNlc3Npb25zUmVxdWVzdBo4",
            "LnRlbmNlbnRjbG91ZC5nc2UuZ3JwY3Nkay5EZXNjcmliZVBsYXllclNlc3Np",
            "b25zUmVzcG9uc2UiABKQAQohVXBkYXRlUGxheWVyU2Vzc2lvbkNyZWF0aW9u",
            "UG9saWN5EkIudGVuY2VudGNsb3VkLmdzZS5ncnBjc2RrLlVwZGF0ZVBsYXll",
            "clNlc3Npb25DcmVhdGlvblBvbGljeVJlcXVlc3QaJS50ZW5jZW50Y2xvdWQu",
            "Z3NlLmdycGNzZGsuR3NlUmVzcG9uc2UiABKCAQoaVGVybWluYXRlR2FtZVNl",
            "cnZlclNlc3Npb24SOy50ZW5jZW50Y2xvdWQuZ3NlLmdycGNzZGsuVGVybWlu",
            "YXRlR2FtZVNlcnZlclNlc3Npb25SZXF1ZXN0GiUudGVuY2VudGNsb3VkLmdz",
            "ZS5ncnBjc2RrLkdzZVJlc3BvbnNlIgASaAoNUHJvY2Vzc0VuZGluZxIuLnRl",
            "bmNlbnRjbG91ZC5nc2UuZ3JwY3Nkay5Qcm9jZXNzRW5kaW5nUmVxdWVzdBol",
            "LnRlbmNlbnRjbG91ZC5nc2UuZ3JwY3Nkay5Hc2VSZXNwb25zZSIAEm4KEFJl",
            "cG9ydEN1c3RvbURhdGESMS50ZW5jZW50Y2xvdWQuZ3NlLmdycGNzZGsuUmVw",
            "b3J0Q3VzdG9tRGF0YVJlcXVlc3QaJS50ZW5jZW50Y2xvdWQuZ3NlLmdycGNz",
            "ZGsuR3NlUmVzcG9uc2UiAEIrChNjc2hhcnAtZGVtby9ncnBjc2RrQgxHcnBj",
            "U2RrUHJvdG9QAaICA0dTRWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.ProcessReadyRequest), global::Tencentcloud.Gse.Grpcsdk.ProcessReadyRequest.Parser, new[]{ "LogPathsToUpload", "ClientPort", "GrpcPort" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.ActivateGameServerSessionRequest), global::Tencentcloud.Gse.Grpcsdk.ActivateGameServerSessionRequest.Parser, new[]{ "GameServerSessionId", "MaxPlayers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.AcceptPlayerSessionRequest), global::Tencentcloud.Gse.Grpcsdk.AcceptPlayerSessionRequest.Parser, new[]{ "GameServerSessionId", "PlayerSessionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.RemovePlayerSessionRequest), global::Tencentcloud.Gse.Grpcsdk.RemovePlayerSessionRequest.Parser, new[]{ "GameServerSessionId", "PlayerSessionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.PlayerSession), global::Tencentcloud.Gse.Grpcsdk.PlayerSession.Parser, new[]{ "PlayerSessionId", "PlayerId", "GameServerSessionId", "FleetId", "IpAddress", "Status", "CreationTime", "TerminationTime", "Port", "PlayerData", "DnsName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.DescribePlayerSessionsRequest), global::Tencentcloud.Gse.Grpcsdk.DescribePlayerSessionsRequest.Parser, new[]{ "GameServerSessionId", "PlayerId", "PlayerSessionId", "PlayerSessionStatusFilter", "NextToken", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.DescribePlayerSessionsResponse), global::Tencentcloud.Gse.Grpcsdk.DescribePlayerSessionsResponse.Parser, new[]{ "NextToken", "PlayerSessions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.UpdatePlayerSessionCreationPolicyRequest), global::Tencentcloud.Gse.Grpcsdk.UpdatePlayerSessionCreationPolicyRequest.Parser, new[]{ "GameServerSessionId", "NewPlayerSessionCreationPolicy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.TerminateGameServerSessionRequest), global::Tencentcloud.Gse.Grpcsdk.TerminateGameServerSessionRequest.Parser, new[]{ "GameServerSessionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.ProcessEndingRequest), global::Tencentcloud.Gse.Grpcsdk.ProcessEndingRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.ReportCustomDataRequest), global::Tencentcloud.Gse.Grpcsdk.ReportCustomDataRequest.Parser, new[]{ "CurrentCustomCount", "MaxCustomCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tencentcloud.Gse.Grpcsdk.GseResponse), global::Tencentcloud.Gse.Grpcsdk.GseResponse.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 游戏进程ProcessReady 调用
  /// </summary>
  public sealed partial class ProcessReadyRequest : pb::IMessage<ProcessReadyRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProcessReadyRequest> _parser = new pb::MessageParser<ProcessReadyRequest>(() => new ProcessReadyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessReadyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessReadyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessReadyRequest(ProcessReadyRequest other) : this() {
      logPathsToUpload_ = other.logPathsToUpload_.Clone();
      clientPort_ = other.clientPort_;
      grpcPort_ = other.grpcPort_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessReadyRequest Clone() {
      return new ProcessReadyRequest(this);
    }

    /// <summary>Field number for the "logPathsToUpload" field.</summary>
    public const int LogPathsToUploadFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_logPathsToUpload_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> logPathsToUpload_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> LogPathsToUpload {
      get { return logPathsToUpload_; }
    }

    /// <summary>Field number for the "clientPort" field.</summary>
    public const int ClientPortFieldNumber = 2;
    private int clientPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientPort {
      get { return clientPort_; }
      set {
        clientPort_ = value;
      }
    }

    /// <summary>Field number for the "grpcPort" field.</summary>
    public const int GrpcPortFieldNumber = 3;
    private int grpcPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GrpcPort {
      get { return grpcPort_; }
      set {
        grpcPort_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessReadyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessReadyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!logPathsToUpload_.Equals(other.logPathsToUpload_)) return false;
      if (ClientPort != other.ClientPort) return false;
      if (GrpcPort != other.GrpcPort) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= logPathsToUpload_.GetHashCode();
      if (ClientPort != 0) hash ^= ClientPort.GetHashCode();
      if (GrpcPort != 0) hash ^= GrpcPort.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      logPathsToUpload_.WriteTo(output, _repeated_logPathsToUpload_codec);
      if (ClientPort != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ClientPort);
      }
      if (GrpcPort != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GrpcPort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      logPathsToUpload_.WriteTo(ref output, _repeated_logPathsToUpload_codec);
      if (ClientPort != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ClientPort);
      }
      if (GrpcPort != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GrpcPort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += logPathsToUpload_.CalculateSize(_repeated_logPathsToUpload_codec);
      if (ClientPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientPort);
      }
      if (GrpcPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GrpcPort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessReadyRequest other) {
      if (other == null) {
        return;
      }
      logPathsToUpload_.Add(other.logPathsToUpload_);
      if (other.ClientPort != 0) {
        ClientPort = other.ClientPort;
      }
      if (other.GrpcPort != 0) {
        GrpcPort = other.GrpcPort;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            logPathsToUpload_.AddEntriesFrom(input, _repeated_logPathsToUpload_codec);
            break;
          }
          case 16: {
            ClientPort = input.ReadInt32();
            break;
          }
          case 24: {
            GrpcPort = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            logPathsToUpload_.AddEntriesFrom(ref input, _repeated_logPathsToUpload_codec);
            break;
          }
          case 16: {
            ClientPort = input.ReadInt32();
            break;
          }
          case 24: {
            GrpcPort = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 游戏进程在收到GSE的启动游戏会话后需要调用
  /// </summary>
  public sealed partial class ActivateGameServerSessionRequest : pb::IMessage<ActivateGameServerSessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivateGameServerSessionRequest> _parser = new pb::MessageParser<ActivateGameServerSessionRequest>(() => new ActivateGameServerSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivateGameServerSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateGameServerSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateGameServerSessionRequest(ActivateGameServerSessionRequest other) : this() {
      gameServerSessionId_ = other.gameServerSessionId_;
      maxPlayers_ = other.maxPlayers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivateGameServerSessionRequest Clone() {
      return new ActivateGameServerSessionRequest(this);
    }

    /// <summary>Field number for the "gameServerSessionId" field.</summary>
    public const int GameServerSessionIdFieldNumber = 1;
    private string gameServerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameServerSessionId {
      get { return gameServerSessionId_; }
      set {
        gameServerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxPlayers" field.</summary>
    public const int MaxPlayersFieldNumber = 2;
    private int maxPlayers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPlayers {
      get { return maxPlayers_; }
      set {
        maxPlayers_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivateGameServerSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivateGameServerSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameServerSessionId != other.GameServerSessionId) return false;
      if (MaxPlayers != other.MaxPlayers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameServerSessionId.Length != 0) hash ^= GameServerSessionId.GetHashCode();
      if (MaxPlayers != 0) hash ^= MaxPlayers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (MaxPlayers != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxPlayers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (MaxPlayers != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxPlayers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameServerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerSessionId);
      }
      if (MaxPlayers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivateGameServerSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.GameServerSessionId.Length != 0) {
        GameServerSessionId = other.GameServerSessionId;
      }
      if (other.MaxPlayers != 0) {
        MaxPlayers = other.MaxPlayers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 16: {
            MaxPlayers = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 16: {
            MaxPlayers = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 游戏进程在玩家加入后调用
  /// </summary>
  public sealed partial class AcceptPlayerSessionRequest : pb::IMessage<AcceptPlayerSessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AcceptPlayerSessionRequest> _parser = new pb::MessageParser<AcceptPlayerSessionRequest>(() => new AcceptPlayerSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceptPlayerSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptPlayerSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptPlayerSessionRequest(AcceptPlayerSessionRequest other) : this() {
      gameServerSessionId_ = other.gameServerSessionId_;
      playerSessionId_ = other.playerSessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptPlayerSessionRequest Clone() {
      return new AcceptPlayerSessionRequest(this);
    }

    /// <summary>Field number for the "gameServerSessionId" field.</summary>
    public const int GameServerSessionIdFieldNumber = 1;
    private string gameServerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameServerSessionId {
      get { return gameServerSessionId_; }
      set {
        gameServerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerSessionId" field.</summary>
    public const int PlayerSessionIdFieldNumber = 2;
    private string playerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerSessionId {
      get { return playerSessionId_; }
      set {
        playerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceptPlayerSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceptPlayerSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameServerSessionId != other.GameServerSessionId) return false;
      if (PlayerSessionId != other.PlayerSessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameServerSessionId.Length != 0) hash ^= GameServerSessionId.GetHashCode();
      if (PlayerSessionId.Length != 0) hash ^= PlayerSessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (PlayerSessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerSessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (PlayerSessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerSessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameServerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerSessionId);
      }
      if (PlayerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerSessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceptPlayerSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.GameServerSessionId.Length != 0) {
        GameServerSessionId = other.GameServerSessionId;
      }
      if (other.PlayerSessionId.Length != 0) {
        PlayerSessionId = other.PlayerSessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 18: {
            PlayerSessionId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 18: {
            PlayerSessionId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 游戏进程在玩家移除后调用
  /// </summary>
  public sealed partial class RemovePlayerSessionRequest : pb::IMessage<RemovePlayerSessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemovePlayerSessionRequest> _parser = new pb::MessageParser<RemovePlayerSessionRequest>(() => new RemovePlayerSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemovePlayerSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePlayerSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePlayerSessionRequest(RemovePlayerSessionRequest other) : this() {
      gameServerSessionId_ = other.gameServerSessionId_;
      playerSessionId_ = other.playerSessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePlayerSessionRequest Clone() {
      return new RemovePlayerSessionRequest(this);
    }

    /// <summary>Field number for the "gameServerSessionId" field.</summary>
    public const int GameServerSessionIdFieldNumber = 1;
    private string gameServerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameServerSessionId {
      get { return gameServerSessionId_; }
      set {
        gameServerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerSessionId" field.</summary>
    public const int PlayerSessionIdFieldNumber = 2;
    private string playerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerSessionId {
      get { return playerSessionId_; }
      set {
        playerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemovePlayerSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemovePlayerSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameServerSessionId != other.GameServerSessionId) return false;
      if (PlayerSessionId != other.PlayerSessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameServerSessionId.Length != 0) hash ^= GameServerSessionId.GetHashCode();
      if (PlayerSessionId.Length != 0) hash ^= PlayerSessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (PlayerSessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerSessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (PlayerSessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerSessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameServerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerSessionId);
      }
      if (PlayerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerSessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemovePlayerSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.GameServerSessionId.Length != 0) {
        GameServerSessionId = other.GameServerSessionId;
      }
      if (other.PlayerSessionId.Length != 0) {
        PlayerSessionId = other.PlayerSessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 18: {
            PlayerSessionId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 18: {
            PlayerSessionId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 玩家信息
  /// </summary>
  public sealed partial class PlayerSession : pb::IMessage<PlayerSession>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerSession> _parser = new pb::MessageParser<PlayerSession>(() => new PlayerSession());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSession(PlayerSession other) : this() {
      playerSessionId_ = other.playerSessionId_;
      playerId_ = other.playerId_;
      gameServerSessionId_ = other.gameServerSessionId_;
      fleetId_ = other.fleetId_;
      ipAddress_ = other.ipAddress_;
      status_ = other.status_;
      creationTime_ = other.creationTime_;
      terminationTime_ = other.terminationTime_;
      port_ = other.port_;
      playerData_ = other.playerData_;
      dnsName_ = other.dnsName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSession Clone() {
      return new PlayerSession(this);
    }

    /// <summary>Field number for the "playerSessionId" field.</summary>
    public const int PlayerSessionIdFieldNumber = 1;
    private string playerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerSessionId {
      get { return playerSessionId_; }
      set {
        playerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameServerSessionId" field.</summary>
    public const int GameServerSessionIdFieldNumber = 3;
    private string gameServerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameServerSessionId {
      get { return gameServerSessionId_; }
      set {
        gameServerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fleetId" field.</summary>
    public const int FleetIdFieldNumber = 4;
    private string fleetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FleetId {
      get { return fleetId_; }
      set {
        fleetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ipAddress" field.</summary>
    public const int IpAddressFieldNumber = 5;
    private string ipAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpAddress {
      get { return ipAddress_; }
      set {
        ipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "creationTime" field.</summary>
    public const int CreationTimeFieldNumber = 7;
    private long creationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreationTime {
      get { return creationTime_; }
      set {
        creationTime_ = value;
      }
    }

    /// <summary>Field number for the "terminationTime" field.</summary>
    public const int TerminationTimeFieldNumber = 8;
    private long terminationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TerminationTime {
      get { return terminationTime_; }
      set {
        terminationTime_ = value;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 9;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "playerData" field.</summary>
    public const int PlayerDataFieldNumber = 10;
    private string playerData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerData {
      get { return playerData_; }
      set {
        playerData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dnsName" field.</summary>
    public const int DnsNameFieldNumber = 11;
    private string dnsName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DnsName {
      get { return dnsName_; }
      set {
        dnsName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerSessionId != other.PlayerSessionId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (GameServerSessionId != other.GameServerSessionId) return false;
      if (FleetId != other.FleetId) return false;
      if (IpAddress != other.IpAddress) return false;
      if (Status != other.Status) return false;
      if (CreationTime != other.CreationTime) return false;
      if (TerminationTime != other.TerminationTime) return false;
      if (Port != other.Port) return false;
      if (PlayerData != other.PlayerData) return false;
      if (DnsName != other.DnsName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerSessionId.Length != 0) hash ^= PlayerSessionId.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (GameServerSessionId.Length != 0) hash ^= GameServerSessionId.GetHashCode();
      if (FleetId.Length != 0) hash ^= FleetId.GetHashCode();
      if (IpAddress.Length != 0) hash ^= IpAddress.GetHashCode();
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (CreationTime != 0L) hash ^= CreationTime.GetHashCode();
      if (TerminationTime != 0L) hash ^= TerminationTime.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (PlayerData.Length != 0) hash ^= PlayerData.GetHashCode();
      if (DnsName.Length != 0) hash ^= DnsName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerSessionId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GameServerSessionId);
      }
      if (FleetId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FleetId);
      }
      if (IpAddress.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IpAddress);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Status);
      }
      if (CreationTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(CreationTime);
      }
      if (TerminationTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TerminationTime);
      }
      if (Port != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Port);
      }
      if (PlayerData.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(PlayerData);
      }
      if (DnsName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DnsName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerSessionId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GameServerSessionId);
      }
      if (FleetId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FleetId);
      }
      if (IpAddress.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IpAddress);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Status);
      }
      if (CreationTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(CreationTime);
      }
      if (TerminationTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TerminationTime);
      }
      if (Port != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Port);
      }
      if (PlayerData.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(PlayerData);
      }
      if (DnsName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DnsName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerSessionId);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (GameServerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerSessionId);
      }
      if (FleetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FleetId);
      }
      if (IpAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddress);
      }
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (CreationTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationTime);
      }
      if (TerminationTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TerminationTime);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (PlayerData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerData);
      }
      if (DnsName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DnsName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerSession other) {
      if (other == null) {
        return;
      }
      if (other.PlayerSessionId.Length != 0) {
        PlayerSessionId = other.PlayerSessionId;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.GameServerSessionId.Length != 0) {
        GameServerSessionId = other.GameServerSessionId;
      }
      if (other.FleetId.Length != 0) {
        FleetId = other.FleetId;
      }
      if (other.IpAddress.Length != 0) {
        IpAddress = other.IpAddress;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      if (other.CreationTime != 0L) {
        CreationTime = other.CreationTime;
      }
      if (other.TerminationTime != 0L) {
        TerminationTime = other.TerminationTime;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.PlayerData.Length != 0) {
        PlayerData = other.PlayerData;
      }
      if (other.DnsName.Length != 0) {
        DnsName = other.DnsName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerSessionId = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 26: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 34: {
            FleetId = input.ReadString();
            break;
          }
          case 42: {
            IpAddress = input.ReadString();
            break;
          }
          case 50: {
            Status = input.ReadString();
            break;
          }
          case 56: {
            CreationTime = input.ReadInt64();
            break;
          }
          case 64: {
            TerminationTime = input.ReadInt64();
            break;
          }
          case 72: {
            Port = input.ReadInt32();
            break;
          }
          case 82: {
            PlayerData = input.ReadString();
            break;
          }
          case 90: {
            DnsName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerSessionId = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 26: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 34: {
            FleetId = input.ReadString();
            break;
          }
          case 42: {
            IpAddress = input.ReadString();
            break;
          }
          case 50: {
            Status = input.ReadString();
            break;
          }
          case 56: {
            CreationTime = input.ReadInt64();
            break;
          }
          case 64: {
            TerminationTime = input.ReadInt64();
            break;
          }
          case 72: {
            Port = input.ReadInt32();
            break;
          }
          case 82: {
            PlayerData = input.ReadString();
            break;
          }
          case 90: {
            DnsName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 游戏进程获取玩家信息
  /// </summary>
  public sealed partial class DescribePlayerSessionsRequest : pb::IMessage<DescribePlayerSessionsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DescribePlayerSessionsRequest> _parser = new pb::MessageParser<DescribePlayerSessionsRequest>(() => new DescribePlayerSessionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribePlayerSessionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribePlayerSessionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribePlayerSessionsRequest(DescribePlayerSessionsRequest other) : this() {
      gameServerSessionId_ = other.gameServerSessionId_;
      playerId_ = other.playerId_;
      playerSessionId_ = other.playerSessionId_;
      playerSessionStatusFilter_ = other.playerSessionStatusFilter_;
      nextToken_ = other.nextToken_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribePlayerSessionsRequest Clone() {
      return new DescribePlayerSessionsRequest(this);
    }

    /// <summary>Field number for the "gameServerSessionId" field.</summary>
    public const int GameServerSessionIdFieldNumber = 1;
    private string gameServerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameServerSessionId {
      get { return gameServerSessionId_; }
      set {
        gameServerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerSessionId" field.</summary>
    public const int PlayerSessionIdFieldNumber = 3;
    private string playerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerSessionId {
      get { return playerSessionId_; }
      set {
        playerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerSessionStatusFilter" field.</summary>
    public const int PlayerSessionStatusFilterFieldNumber = 4;
    private string playerSessionStatusFilter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerSessionStatusFilter {
      get { return playerSessionStatusFilter_; }
      set {
        playerSessionStatusFilter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nextToken" field.</summary>
    public const int NextTokenFieldNumber = 5;
    private string nextToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextToken {
      get { return nextToken_; }
      set {
        nextToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 6;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribePlayerSessionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribePlayerSessionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameServerSessionId != other.GameServerSessionId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (PlayerSessionId != other.PlayerSessionId) return false;
      if (PlayerSessionStatusFilter != other.PlayerSessionStatusFilter) return false;
      if (NextToken != other.NextToken) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameServerSessionId.Length != 0) hash ^= GameServerSessionId.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerSessionId.Length != 0) hash ^= PlayerSessionId.GetHashCode();
      if (PlayerSessionStatusFilter.Length != 0) hash ^= PlayerSessionStatusFilter.GetHashCode();
      if (NextToken.Length != 0) hash ^= NextToken.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (PlayerSessionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerSessionId);
      }
      if (PlayerSessionStatusFilter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerSessionStatusFilter);
      }
      if (NextToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NextToken);
      }
      if (Limit != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (PlayerSessionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerSessionId);
      }
      if (PlayerSessionStatusFilter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerSessionStatusFilter);
      }
      if (NextToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NextToken);
      }
      if (Limit != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameServerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerSessionId);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PlayerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerSessionId);
      }
      if (PlayerSessionStatusFilter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerSessionStatusFilter);
      }
      if (NextToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextToken);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribePlayerSessionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.GameServerSessionId.Length != 0) {
        GameServerSessionId = other.GameServerSessionId;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerSessionId.Length != 0) {
        PlayerSessionId = other.PlayerSessionId;
      }
      if (other.PlayerSessionStatusFilter.Length != 0) {
        PlayerSessionStatusFilter = other.PlayerSessionStatusFilter;
      }
      if (other.NextToken.Length != 0) {
        NextToken = other.NextToken;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 26: {
            PlayerSessionId = input.ReadString();
            break;
          }
          case 34: {
            PlayerSessionStatusFilter = input.ReadString();
            break;
          }
          case 42: {
            NextToken = input.ReadString();
            break;
          }
          case 48: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 26: {
            PlayerSessionId = input.ReadString();
            break;
          }
          case 34: {
            PlayerSessionStatusFilter = input.ReadString();
            break;
          }
          case 42: {
            NextToken = input.ReadString();
            break;
          }
          case 48: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DescribePlayerSessionsResponse : pb::IMessage<DescribePlayerSessionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DescribePlayerSessionsResponse> _parser = new pb::MessageParser<DescribePlayerSessionsResponse>(() => new DescribePlayerSessionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribePlayerSessionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribePlayerSessionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribePlayerSessionsResponse(DescribePlayerSessionsResponse other) : this() {
      nextToken_ = other.nextToken_;
      playerSessions_ = other.playerSessions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribePlayerSessionsResponse Clone() {
      return new DescribePlayerSessionsResponse(this);
    }

    /// <summary>Field number for the "nextToken" field.</summary>
    public const int NextTokenFieldNumber = 1;
    private string nextToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextToken {
      get { return nextToken_; }
      set {
        nextToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerSessions" field.</summary>
    public const int PlayerSessionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tencentcloud.Gse.Grpcsdk.PlayerSession> _repeated_playerSessions_codec
        = pb::FieldCodec.ForMessage(18, global::Tencentcloud.Gse.Grpcsdk.PlayerSession.Parser);
    private readonly pbc::RepeatedField<global::Tencentcloud.Gse.Grpcsdk.PlayerSession> playerSessions_ = new pbc::RepeatedField<global::Tencentcloud.Gse.Grpcsdk.PlayerSession>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tencentcloud.Gse.Grpcsdk.PlayerSession> PlayerSessions {
      get { return playerSessions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribePlayerSessionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribePlayerSessionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NextToken != other.NextToken) return false;
      if(!playerSessions_.Equals(other.playerSessions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NextToken.Length != 0) hash ^= NextToken.GetHashCode();
      hash ^= playerSessions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NextToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NextToken);
      }
      playerSessions_.WriteTo(output, _repeated_playerSessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NextToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NextToken);
      }
      playerSessions_.WriteTo(ref output, _repeated_playerSessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NextToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextToken);
      }
      size += playerSessions_.CalculateSize(_repeated_playerSessions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribePlayerSessionsResponse other) {
      if (other == null) {
        return;
      }
      if (other.NextToken.Length != 0) {
        NextToken = other.NextToken;
      }
      playerSessions_.Add(other.playerSessions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NextToken = input.ReadString();
            break;
          }
          case 18: {
            playerSessions_.AddEntriesFrom(input, _repeated_playerSessions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NextToken = input.ReadString();
            break;
          }
          case 18: {
            playerSessions_.AddEntriesFrom(ref input, _repeated_playerSessions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 游戏进程更新玩家加入策略
  /// </summary>
  public sealed partial class UpdatePlayerSessionCreationPolicyRequest : pb::IMessage<UpdatePlayerSessionCreationPolicyRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdatePlayerSessionCreationPolicyRequest> _parser = new pb::MessageParser<UpdatePlayerSessionCreationPolicyRequest>(() => new UpdatePlayerSessionCreationPolicyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdatePlayerSessionCreationPolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePlayerSessionCreationPolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePlayerSessionCreationPolicyRequest(UpdatePlayerSessionCreationPolicyRequest other) : this() {
      gameServerSessionId_ = other.gameServerSessionId_;
      newPlayerSessionCreationPolicy_ = other.newPlayerSessionCreationPolicy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePlayerSessionCreationPolicyRequest Clone() {
      return new UpdatePlayerSessionCreationPolicyRequest(this);
    }

    /// <summary>Field number for the "gameServerSessionId" field.</summary>
    public const int GameServerSessionIdFieldNumber = 1;
    private string gameServerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameServerSessionId {
      get { return gameServerSessionId_; }
      set {
        gameServerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "newPlayerSessionCreationPolicy" field.</summary>
    public const int NewPlayerSessionCreationPolicyFieldNumber = 2;
    private string newPlayerSessionCreationPolicy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewPlayerSessionCreationPolicy {
      get { return newPlayerSessionCreationPolicy_; }
      set {
        newPlayerSessionCreationPolicy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdatePlayerSessionCreationPolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdatePlayerSessionCreationPolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameServerSessionId != other.GameServerSessionId) return false;
      if (NewPlayerSessionCreationPolicy != other.NewPlayerSessionCreationPolicy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameServerSessionId.Length != 0) hash ^= GameServerSessionId.GetHashCode();
      if (NewPlayerSessionCreationPolicy.Length != 0) hash ^= NewPlayerSessionCreationPolicy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (NewPlayerSessionCreationPolicy.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NewPlayerSessionCreationPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (NewPlayerSessionCreationPolicy.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NewPlayerSessionCreationPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameServerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerSessionId);
      }
      if (NewPlayerSessionCreationPolicy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPlayerSessionCreationPolicy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdatePlayerSessionCreationPolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.GameServerSessionId.Length != 0) {
        GameServerSessionId = other.GameServerSessionId;
      }
      if (other.NewPlayerSessionCreationPolicy.Length != 0) {
        NewPlayerSessionCreationPolicy = other.NewPlayerSessionCreationPolicy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 18: {
            NewPlayerSessionCreationPolicy = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
          case 18: {
            NewPlayerSessionCreationPolicy = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 游戏进程在结束游戏会话后调用
  /// </summary>
  public sealed partial class TerminateGameServerSessionRequest : pb::IMessage<TerminateGameServerSessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TerminateGameServerSessionRequest> _parser = new pb::MessageParser<TerminateGameServerSessionRequest>(() => new TerminateGameServerSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TerminateGameServerSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminateGameServerSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminateGameServerSessionRequest(TerminateGameServerSessionRequest other) : this() {
      gameServerSessionId_ = other.gameServerSessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminateGameServerSessionRequest Clone() {
      return new TerminateGameServerSessionRequest(this);
    }

    /// <summary>Field number for the "gameServerSessionId" field.</summary>
    public const int GameServerSessionIdFieldNumber = 1;
    private string gameServerSessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameServerSessionId {
      get { return gameServerSessionId_; }
      set {
        gameServerSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TerminateGameServerSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TerminateGameServerSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameServerSessionId != other.GameServerSessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameServerSessionId.Length != 0) hash ^= GameServerSessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameServerSessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameServerSessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameServerSessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameServerSessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TerminateGameServerSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.GameServerSessionId.Length != 0) {
        GameServerSessionId = other.GameServerSessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameServerSessionId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 游戏进程在退出时调用
  /// </summary>
  public sealed partial class ProcessEndingRequest : pb::IMessage<ProcessEndingRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProcessEndingRequest> _parser = new pb::MessageParser<ProcessEndingRequest>(() => new ProcessEndingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessEndingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessEndingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessEndingRequest(ProcessEndingRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessEndingRequest Clone() {
      return new ProcessEndingRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessEndingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessEndingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessEndingRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 上报自定义数据
  /// </summary>
  public sealed partial class ReportCustomDataRequest : pb::IMessage<ReportCustomDataRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportCustomDataRequest> _parser = new pb::MessageParser<ReportCustomDataRequest>(() => new ReportCustomDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportCustomDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportCustomDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportCustomDataRequest(ReportCustomDataRequest other) : this() {
      currentCustomCount_ = other.currentCustomCount_;
      maxCustomCount_ = other.maxCustomCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportCustomDataRequest Clone() {
      return new ReportCustomDataRequest(this);
    }

    /// <summary>Field number for the "currentCustomCount" field.</summary>
    public const int CurrentCustomCountFieldNumber = 1;
    private int currentCustomCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentCustomCount {
      get { return currentCustomCount_; }
      set {
        currentCustomCount_ = value;
      }
    }

    /// <summary>Field number for the "maxCustomCount" field.</summary>
    public const int MaxCustomCountFieldNumber = 2;
    private int maxCustomCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxCustomCount {
      get { return maxCustomCount_; }
      set {
        maxCustomCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportCustomDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportCustomDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentCustomCount != other.CurrentCustomCount) return false;
      if (MaxCustomCount != other.MaxCustomCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentCustomCount != 0) hash ^= CurrentCustomCount.GetHashCode();
      if (MaxCustomCount != 0) hash ^= MaxCustomCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurrentCustomCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurrentCustomCount);
      }
      if (MaxCustomCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxCustomCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurrentCustomCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurrentCustomCount);
      }
      if (MaxCustomCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxCustomCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentCustomCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentCustomCount);
      }
      if (MaxCustomCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCustomCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportCustomDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.CurrentCustomCount != 0) {
        CurrentCustomCount = other.CurrentCustomCount;
      }
      if (other.MaxCustomCount != 0) {
        MaxCustomCount = other.MaxCustomCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrentCustomCount = input.ReadInt32();
            break;
          }
          case 16: {
            MaxCustomCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurrentCustomCount = input.ReadInt32();
            break;
          }
          case 16: {
            MaxCustomCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 返回结果
  /// </summary>
  public sealed partial class GseResponse : pb::IMessage<GseResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GseResponse> _parser = new pb::MessageParser<GseResponse>(() => new GseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tencentcloud.Gse.Grpcsdk.GseGrpcSdkServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GseResponse(GseResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GseResponse Clone() {
      return new GseResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GseResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
